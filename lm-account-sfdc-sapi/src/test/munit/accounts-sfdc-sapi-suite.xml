<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="accounts-sfdc-sapi-suite.xml" />
	<munit:test name="accounts-sfdc-sapi-main-test" doc:id="a18ccf5a-f06a-4a54-92ac-8beb4b27123f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="4cd0555c-9fa8-4dc8-a7ae-249c43eed7a1" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/api/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="eadfbb2d-0dbb-426a-93d1-e069f73cf41c" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1fe14cd8-3de6-4b1b-bc9b-c2ad8f25e89d" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://accountssfdcsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://accountssfdcsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-main" doc:id="485fd0f7-8361-4646-9e7e-0c704fdcb156" name="accounts-sfdc-sapi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="35d23ecd-f898-411f-a47b-3874be8dfa0b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountssfdcsapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="accounts-sfdc-sapi-console-test" doc:id="683b917a-86de-43ed-8dc7-e3605b436aaa" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="1e557a4a-b293-4fb4-949e-abf575e7b948" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-httpListenerConfig" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="1cc3e92f-c767-4958-aac1-7fd193954ca2" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="accounts-sfdc-sapi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c984d8b7-51bd-4a68-a7d1-c9dc2a463dbc" >
				<munit:payload value="#[readUrl('classpath://accountssfdcsapiconsoletest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://accountssfdcsapiconsoletest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to accounts-sfdc-sapi-console" doc:id="8ce71b34-eb91-4aea-984e-57fe9f8b52d8" name="accounts-sfdc-sapi-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9c26cd62-8e0f-4b11-9194-3b583fdeed27" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import accountssfdcsapiconsoletest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config-test" doc:id="576782f3-1e3f-4504-a48e-c4494eea5e24" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a35a10a2-5416-4c33-baee-8a19c955701c" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config" doc:id="e80736b1-3e47-4082-b485-04d0f4e97bdd" name="put:\accounts\(account_id):application\json:accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="aec776e0-731b-4cda-bd9a-000a0d5a7687" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putaccountsaccountidapplicationjsonaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete:\accounts\(account_id):accounts-sfdc-sapi-config-test" doc:id="6457abd8-fc68-4b12-acf1-dd77da671fca" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="7c64881f-9342-47c9-9d66-217915059ff0" >
				<munit:payload value="#[readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deleteaccountsaccountidaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to delete:\accounts\(account_id):accounts-sfdc-sapi-config" doc:id="ceb7132b-a60f-408b-9b6d-1a557fbb831e" name="delete:\accounts\(account_id):accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fd2f522d-7648-4c0e-9f6e-07e68255e269" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deleteaccountsaccountidaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\accounts\(account_id):accounts-sfdc-sapi-config-test" doc:id="4c2ae69e-5991-47ce-85f9-731e6ce24b25" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="cd53a689-34fe-4083-a282-0b6b6aaeb0d1" >
				<munit:payload value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getaccountsaccountidaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\accounts\(account_id):accounts-sfdc-sapi-config" doc:id="b9deb208-c940-4233-a4c8-f1c916ca8103" name="get:\accounts\(account_id):accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="02aa674a-3996-434e-9864-6dbc1da87ccc" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getaccountsaccountidaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\accounts:application\json:accounts-sfdc-sapi-config-test" doc:id="f0484929-6ddf-46aa-807a-fb14a9f71d5a" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="f2baa219-1ae8-415c-989d-4ac281fe733c" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postaccountsapplicationjsonaccountssfdcsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\accounts:application\json:accounts-sfdc-sapi-config" doc:id="16542e55-d28d-472e-9fd8-d040ea9bd5ec" name="post:\accounts:application\json:accounts-sfdc-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a7796418-690c-439e-8916-2e23c6aa49f7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postaccountsapplicationjsonaccountssfdcsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
